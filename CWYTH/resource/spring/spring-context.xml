<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	<!-- 启用注解 -->
	<context:annotation-config/>
	
	<!-- 启动组件扫描，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.googosoft">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 读取配置文件 -->
	<!-- <context:property-placeholder location="classpath:googosoft.properties"/> -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">
			<list>
                 <value>classpath:googosoft.properties</value>  
                 <value>classpath:commonProperties/sso-cas.properties</value> 
            </list>  
        </property>  
	</bean>
	
	<!-- 阿里 druid数据库连接池   -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${url}"/>
         <property name="username" value="${username}" /> 
         <property name="password" value="${password}" />  
         <property name="driverClassName" value="${driverClassName}" /> 
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${minIdle}" />
         <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->   
         <property name="filters" value="${filters}" />    
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
           
         <property name="validationQuery" value="${validationQuery}" />  
         <property name="testWhileIdle" value="${testWhileIdle}" />  
         <property name="testOnBorrow" value="${testOnBorrow}" />  
         <property name="testOnReturn" value="${testOnReturn}" />
         <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->     
         <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${removeAbandoned}" />
         <!-- 180秒，也就是3分钟 -->
         <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${logAbandoned}" />
	</bean>  
	
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
<!-- 		<property name="databaseSchema" value="false"/> -->
   		 <property name="databaseSchemaUpdate" value="update" />
		<property name="jobExecutorActivate" value="false" />  		
		 <property name="activityFontName" value="宋体" />
		<property name="labelFontName" value="宋体"/>
		<!-- 使用spring的自动资源加载部署方式部署 -->
		<property name="deploymentResources" value="classpath*:diagrams/*.*" />
	</bean>
	 <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    <property name="processEngineConfiguration" ref="processEngineConfiguration" />
  </bean>
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
   <bean id="orformService" factory-bean="processEngine" factory-method="getFormService" />
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
  <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
  <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
	<!-- 配置事务管理器 name：事务管理器名称，class：事务管理器类全名 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    	<!-- 依赖注入上面定义的数据源dataSource  name：数据源属性名称 ref：要引用的数据源实例名称 -->  
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>
	<!--基于注解的事务控制  -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
	<!-- 配置事务通知 id：事务通知名称，transaction-manager：事务管理器名称 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 以delete、insert、update、save开头的所有方法采用只读型事务控制类型 -->  
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="save*"   propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception" />
			<tx:method name="do*"   propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
			<tx:method name="batch*"   propagation="REQUIRED" read-only="false"  rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- aop注解支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 使用aop技术实现事物处理 -->
	<aop:config>
		<!-- id：事务切入点名称 expression:事务切入点正则表达式 -->
		<aop:pointcut id="pc" expression="execution(* com.googosoft.service..*(..))"/>
		<!-- id：事务切入点名称 expression:事务切入点正则表达式 -->
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
	</aop:config>
	
	<bean id = "jdbcTemplate" class = "com.googosoft.dao.base.DBHelper">    
         <property name = "dataSource" ref="dataSource"/>    
    </bean>
<!-- 	<bean id = "processEngines" class = "org.activiti.engine.ProcessEngines">   -->
<!--          <property name = "dataSource" ref="dataSource"/>     -->
<!--     </bean> -->
	
	<bean id="SpringContextUtil" class="com.googosoft.util.SpringBeanFactoryUtils"/>
	  <!-- 缓存配置 -->
	  <!-- <bean id="cacheManager"  class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	      <property name="configLocation" value="classpath:cache/ehcache.xml"/>
	  </bean>
	  A facade to the Ehcache cache class
	  <bean id="cacheProviderFacade" class="org.springmodules.cache.provider.ehcache.EhCacheFacade">
	      <property name="cacheManager" ref="cacheManager" />
	  </bean>
 -->
</beans>
